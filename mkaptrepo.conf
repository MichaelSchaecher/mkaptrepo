# shellcheck disable=SC2148

# What is the name of the repository? This is used to for maintaining
# deb packages and the repository itself.
#
#REPOSITORY_NAME=

# Set the `Origin` field in the Release file; it is best practise to
# use an organization name or root domain name. E.I `HowToNebie`
#
# default: repository
#ORIGIN="repository"

# The `Label` field in the Release is used to identify the repository.
# The available options are: (default, same as `ORIGIN`)
#
# default: $ORIGIN
#LABEL="$ORIGIN"

# The `Suite` field in the Release file is used to identify the code name
# of the main distribution. However, to make it more flexible, you can
# set it to any value you like. The default is `stable`, but you can set it
# to `testing`, `unstable`, or any other name that suits your repository.
#
# default: stable
#SUITE="stable"

# The `Codename` field in the Release file is used to identify the code name
# of the main distribution. However, to make it more flexible, you can
# set it to any value you like. The default is `stable`, but you can set it
# to `testing`, `unstable`, or any other name that suits your repository.
#
# default: stable
#CODENAME="stable"

# The `Architectures` field in the Release file is used to identify the architectures
# of the repository. The default is set by `dpkg --print-architecture`, however, you can
# set it to any value you like that is recognized by `dpkg`. You can also set it to
# multiple values, separated by spaces. For example, you can set it to `amd64 arm64` to
# include both `amd64` and `arm64` architectures.
#
# default: amd64
#ARCHITECTURES="amd64"

# The `Components` field in the Release file is used to identify the
# components of the repository. The default is `main`, but you can set it
# to any value you like. You can also set it to multiple values, separated
# by spaces. For example, you can set it to `main contrib non-free` to
# include the `contrib` and `non-free` components.
#
# default: main
#COMPONENTS="main"

# The `Maintainer` field in the Release file is used to identify the individual or
# organization that maintains the repository. The default is set by  `git config user.name`
# and `git config user.email`, however, you can set it to any value you like.
# For example, you can set it to `John Doe <JohnDoe@mail.com>`

# default: $(git config user.name) <$(git config user.email)>
#MAINTAINER="$(git config user.name) <$(git config user.email)>"
